server:
  port: 8082
  servlet:
    context-path: /


logging:
  level:
    io.micrometer: debug
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0
    propagation:
      type: b3
  zipkin:
    tracing:
      endpoint: "http://localhost:30411/api/v2/spans"

spring:
  kafka:
    topic: test
    bootstrap-servers: localhost:29092 #서버
    producer: #카프카로 보낼때 직렬화 하는 방법.
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
  r2dbc:
    url: r2dbc:mysql://localhost:3306/tb01
    username: root
    pool:
      max-size: 10
      initial-size: 5
    password: root
  application:
    name: "factory"
  main:
    web-application-type: reactive

springdoc:
  api-docs:
    version: openapi_3_1
  swagger-ui:
    path: /v3/api-docs
    urls:
      - name: "공장 관리"
        url: /openapi/factory-spec.yaml